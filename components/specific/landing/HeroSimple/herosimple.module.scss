@use '../../../layout/animations';
@use '../../../layout/colours';

.hero {
    padding: 2.1em;
    box-sizing: border-box;
    overflow: hidden;
    user-select: none;
    min-height: 100vh; // Add minimum height for mobile
}

.title {
    color: white;
    font-size: 2.65em;
    font-weight: 400;
    margin: 0 0 .75em 0;
    opacity: 0;
    animation: reveal-title 0.5s ease-out forwards;
    animation-delay: 0.4s;
    user-select: none;
}

.projects {
    display: flex;
    flex-direction: column;
    gap: 1em;
    align-items: flex-start;
    height: 100%;
    box-sizing: border-box;
    position: relative; // Add this to contain absolute arrows
}

.projectdesc {
    color: rgb(236, 236, 236);
    box-sizing: border-box;
    opacity: 0;
    animation: reveal-desc 0.5s ease-out forwards;
    animation-delay: 0.6s;
    padding: 0 3.5em;
    margin-bottom: 0; // Remove bottom margin
    user-select: none;
    position: relative; // Ensure text stays above preview
    min-height: 72vh;
    width: 100%;
    display: flex;
    flex-direction: column;
    z-index: 1;
}

.projectname {
    font-weight: bold;
    margin-top: 0;
    margin-bottom: 1em; // Add space below project name
    opacity: 0;
    animation: reveal-desc 0.5s ease-out forwards;
    animation-delay: 0.6s;
    user-select: none;
    position: relative; // Add relative positioning
    z-index: 2; // Ensure it's above preview
}

// Base mobile styles
.projectpreview {
    opacity: 0;
    position: absolute; // Change to absolute
    top: 9em; // Reduce from 10em to raise the preview content slightly more
    left: 0;
    width: 100%;
    height: auto; // Let height be determined by content
    max-height: none; // Remove max-height to fit naturally
    margin-top: 1em; // Return to original spacing
    visibility: hidden;
    transition: opacity 0.5s ease-out, visibility 0.5s ease-out;
    display: flex;
    flex-direction: column;
    justify-content: center; // Center vertically
    align-items: center; // Center horizontally
    z-index: 1;
    padding: 0 3.5em; // Match projectdesc padding
    box-sizing: border-box;
    min-height: auto;
    transition: all 0.4s ease-in-out;

    &.showMobile {
        visibility: visible;
        opacity: 1;

        .screen {
            opacity: 1;
            width: 100%;
            height: auto;
            max-height: 35vh; // Slightly reduce height
            margin-bottom: 1.5em; // More space between screen and mobile
            transform: translateX(0);
            transition: all 0.4s ease-in-out;
            transition-delay: 0.2s;
        }

        .mobile {
            position: absolute;
            top: 20%; // Move down a bit
            left: 50%;
            width: 25%; // Make mobile preview smaller
            opacity: 1;
            transform: translate(-50%, 0);
            transition: all 0.4s ease-in-out;
            transition-delay: 0.4s;
        }
    }
}

.screen { 
    opacity: 0;
    position: relative;
    z-index: 1;
    transition: all 0.5s ease-out;
    transform: translateX(-20px);
    user-select: none;
    display: block; // Always display but control with opacity
    width: 100%; // Set explicit width
    aspect-ratio: 16 / 9; // Lock aspect ratio
    max-height: 35vh; // Match the showMobile state
    
    &:not(.showMobile) {
        opacity: 0;
        transform: translateX(-20px);
    }
    
    &.showMobile {
        opacity: 1;
    }
}

.herosimple_screen { 
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.screenmonitor {
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 0;
    left: 0;
}

.screenbase {
    position: absolute;
    top: 32.5vw;
    width: 35vh;
    left: 0;
    right: 0;
    margin: auto;
    z-index: -1;
}

.mobile {
    opacity: 0;
    position: absolute;
    z-index: 2;
    transition: all 0.5s ease-out;
    user-select: none;
    display: block; // Always display but control with opacity
    width: 25%; // Match the showMobile state
    aspect-ratio: 9 / 16; // Lock aspect ratio for mobile
    top: 20%; // Match initial position
    left: 50%;
    transform: translate(-50%, 20px);
    
    &:not(.showMobile) {
        opacity: 0;
        transform: translate(-50%, 20px);
    }
    
    &.showMobile {
        opacity: 1;
    }
}

.mobileicon {
    width: 100%;
}

.screenspinner {
    width: 4em;
    height: 4em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
    opacity: 1;
    transition: opacity 0.2s ease-out;
}

.mobilespinner {
    width: 3em;
    height: 3em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
    opacity: 1;
    transition: opacity 0.2s ease-out;
}

.projectproblems,
.projectsolutions,
.projectparagraph {
    opacity: 0;
    transition: opacity 0.3s ease-out; // Adjust transition
    user-select: none;
}

.mobileiframe {
    width: 100%;
    height: 100%;
}

.controls {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1em;
    opacity: 0;
    transition: opacity 0.3s ease-out;
    margin-top: 1.5em;
    position: absolute;
    bottom: 3em; // Fixed position from bottom
    left: 0;
    
    &.visible {
        opacity: 1;
    }
}

.link {
    font-size: 1.225em;
    color: rgb(166, 166, 166);
    text-decoration: none;
    font-weight: 300;
    padding: 0.135em;
    border-radius: 0.135em;
    transition: all 0.25s ease-out; // Smoother transition

    &:hover {
        color: rgb(44, 44, 44);
        background: rgb(217, 217, 217);
    }
}

.controllinks {
    display: flex;
    gap: 1em;
}

.dots {
    width: 100%;
    display: flex;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease-out;
    margin-top: 0.75em;
    position: absolute;
    bottom: 1em; // Fixed position from bottom
    left: 0;
    
    &.visible {
        opacity: 1;
    }
}

.arrows {
    position: absolute; // Change back to absolute
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    width: 100%;
    height: 3.5em; // Add fixed height
    z-index: 20;
    display: flex;
    justify-content: space-between;
    padding: 0 1em;
    box-sizing: border-box;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease-out;
    visibility: hidden; // Add this
    
    &.visible {
        opacity: 1;
        pointer-events: auto;
        visibility: visible; // Add this
    }
}

.buttonspacer {
    width: 3.5em;
    height: 3.5em;
}

.dot {
    cursor: pointer;
    margin-right: 0.35em;
    width: 1.3em;

    &.active, &:hover circle {
        fill: rgb(217, 217, 217);
    }
}

.button {
    pointer-events: auto;
    background: rgba(0, 0, 0, 0.5);
    border: none;
    border-radius: 50%;
    width: 3.5em;
    height: 3.5em;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 0.7;
    transition: opacity 0.2s ease;
    position: relative; // Change from absolute
    user-select: none;

    &:hover {
        opacity: 1;
    }

    &:disabled {
        opacity: 0;
        cursor: not-allowed;
        pointer-events: none;
        visibility: hidden;
    }
}

.buttonleft,
.buttonright {
    position: static;
}

.buttonleft {
    left: 0;
}

.buttonright {
    right: 0;
}

.arrow {
    width: 2.5em;
    height: 2.5em;
    
    path {
        fill: white;
        stroke-width: 1.5;
    }
}

.arrowleft {
    margin-left: 0;
}

.arrowright {
    margin-right: 0;
}

// Mobile-specific animations
.contentContainer {
    opacity: 0;
    transition: opacity 0.5s ease-out;
    min-height: 25em; // Set minimum height for content
    transition: all 0.4s ease-in-out;

    &.visible {
        opacity: 1;

        .projectproblems {
            opacity: 1;
            transition-delay: 0.2s;
        }

        .projectparagraph:first-of-type {
            opacity: 1;
            transition-delay: 0.3s;
        }

        .projectsolutions {
            opacity: 1;
            transition-delay: 0.4s;
        }

        .projectparagraph:last-of-type {
            opacity: 1;
            transition-delay: 0.5s;
        }
    }
}

.dots {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 20;
    display: flex;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease-out;
    margin-top: 2em;
    
    &.visible {
        opacity: 1;
    }
}

.controls {
    position: absolute;
    bottom: 1em;
    left: 0;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1em;
    opacity: 0;
    transition: opacity 0.3s ease-out;
    
    &.visible {
        opacity: 1;
    }
}

.button {
    // ...existing button styles...
    position: relative; // Change from absolute
}

// Desktop breakpoints (at end of file)
@media screen and (min-width: 1200px) {
    .hero {
        padding: 3em 8em; // Increase horizontal padding to accommodate arrows
        min-height: 80vh;
    }

    .projects {
        flex-direction: row;
        align-items: center;
        gap: 4em;
        padding: 0;
    }

    .projectdesc {
        padding: 0;
        min-height: 60vh;
        margin-bottom: 0;
        flex: 0 0 35%;
        display: flex;
        flex-direction: column;
        color: white;
        align-self: flex-start;
        position: relative;
    }

    // Desktop styles override at the end
    .projectpreview {
        position: relative;
        opacity: 1;
        visibility: visible;
        height: 60vh;
        padding: 0;
        top: auto; // Reset top position for desktop
        width: 65%; // Ensure width is set for desktop
        margin: 0; // Reset margin
        transition: none;
        overflow: visible; // Allow buttons to overflow

        .screen {
            position: relative;
            display: block;
            width: 100%;
            height: 100%;
            opacity: 0; // Start hidden
            margin: 0;
            max-height: none;
            animation: none; // Remove default animation
            transition: all 0.4s ease-in-out;
            transform: translateX(20px);
            transition-delay: 0.1s;
        }

        .mobile {
            position: absolute;
            bottom: -1em;
            right: 15%;
            top: auto;
            left: auto;
            width: 14vw;
            transform: translateY(20px);
            opacity: 0; // Start hidden
            animation: none; // Remove default animation
            transition: all 0.4s ease-in-out;
            transition-delay: 0.3s;
        }

        &.showMobile {
            visibility: visible;
            opacity: 1;

            .screen,
            .mobile {
                // Remove any mobile-specific size/position adjustments
                width: auto;
                margin: 0;
            }

            .screen {
                width: 100%;
                height: 100%;
                max-height: none;
                margin: 0;
                opacity: 1;
                transform: translateX(0);
                transition: all 0.4s ease-in-out;
                transition-delay: 0.1s;
            }

            .mobile {
                // Keep original desktop position and size
                position: absolute;
                bottom: -1em;
                right: 15%;
                top: auto;
                left: auto;
                width: 14vw;
                transform: translateY(0);
                opacity: 1;
                transition: all 0.4s ease-in-out;
                transition-delay: 0.3s;
            }
        }

        // Remove any transition properties that might affect size/position
        .screen,
        .mobile {
            transition: opacity 0.3s ease-out;
            visibility: visible;
            transform: none;
        }
    }

    .arrows {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: calc(100% + 8em);
        padding: 0;
        z-index: 20;
        opacity: 0;
        pointer-events: none;
        // Remove animation and animation-delay
        transition: opacity 0.3s ease-out;
        visibility: visible;

        &.visible {
            opacity: 1;
            pointer-events: auto;
        }
    }

    .button {
        position: relative; // Change to relative
        pointer-events: auto;
        margin: 0 -5em; // Push buttons outward

        &.buttonleft {
            left: 0;
        }

        &.buttonright {
            right: 0;
        }
    }

    .screen,
    .mobile {
        transition: none; // Remove transition to avoid conflicts with animation
        visibility: visible;
        animation: none;
    }

    .screen {
        display: block;
    }

    .mobile {
        display: block;
    }

    .title {
        margin: 0 0 0.5em 0;
    }

    .disclaimer {
        display: block;
        width: 27.5em;
        margin-left: 4.1em;
    }

    .controls {
        position: absolute;
        bottom: -4.25em;
        margin-top: 0;
        // ...rest of desktop controls styles
    }

    .dots {
        position: absolute;
        bottom: -4.25em;
        margin-top: 0;
        // ...rest of desktop dots styles
    }

    .controls {
        position: absolute;
        bottom: -4.25em;
        left: 0;
        top: auto;
        transform: none;
        margin-top: 2em;
        width: 100%;
        z-index: 2;
        box-sizing: border-box;
        text-align: left;
        flex-direction: row;
        justify-content: space-between;
        padding: 0 2em;
    }

    .screen {
        display: block;
    }

    .screeniframe {
        height: 100%;
    }

    .contentContainer {
        opacity: 0;
        visibility: hidden; // Add visibility control
        min-height: 0;
        margin-bottom: 0;
        transition: opacity 0.4s ease-in-out, visibility 0.4s ease-in-out;

        &.visible {
            opacity: 1;
            visibility: visible;

            .projectproblems,
            .projectsolutions,
            .projectparagraph {
                opacity: 1;
                visibility: visible;
            }
        }

        .projectproblems,
        .projectsolutions,
        .projectparagraph {
            opacity: 0;
            visibility: hidden; // Hide text completely when not visible
            transition: opacity 0.4s ease-in-out, visibility 0.4s ease-in-out;
            will-change: opacity, visibility;
        }

        &.visible {
            .projectproblems {
                transition-delay: 0.2s;
            }
            .projectparagraph:first-of-type {
                transition-delay: 0.3s;
            }
            .projectsolutions {
                transition-delay: 0.5s;
            }
            .projectparagraph:last-of-type {
                transition-delay: 0.6s;
            }
        }
    }

    // Ensure transitions are smoother
    .screen,
    .mobile {
        transition: opacity 0.3s ease-out;
        visibility: visible;
    }

    .contentContainer {
        // ...existing styles...
        
        &.visible {
            opacity: 1;

            .projectproblems {
                opacity: 1;
                transition-delay: 0.3s;
            }

            .projectparagraph:first-of-type {
                opacity: 1;
                transition-delay: 0.4s;
            }

            .projectsolutions {
                opacity: 1;
                transition-delay: 0.6s;
            }

            .projectparagraph:last-of-type {
                opacity: 1;
                transition-delay: 0.7s;
            }
        }
    }

    // Optional: Add visual feedback for disabled controls
    .button,
    .dot {
        &[disabled],
        &.disabled {
            opacity: 0.3;
            cursor: not-allowed;
            pointer-events: none;
        }
    }
}

@media screen and (min-width: 1400px) {
    // ...larger desktop styles
}

// Ensure keyframes are correctly defined
@keyframes reveal-screen {
    from {
        transform: translateX(20px);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes reveal-mobile {
    from {
        transform: translateY(40px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
} // Add missing closing brace

@keyframes reveal-desc {
    from {
        transform: translateX(-20px);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes reveal-controls {
    from {
        transform: translateY(10px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes reveal-mobile-overlay {
    from {
        transform: translate(-50%, 20px);
        opacity: 0;
    }
    to {
        transform: translate(-50%, 0);
        opacity: 1;
    }
}

@media screen and (max-width: 1199px) {
    .controls,
    .dots {
        &.visible {
            transition: none;
            opacity: 1 !important;
        }
    }
    // Remove arrows from this media query if it exists
}